## This configuration was generated by terraform-provider-oci

resource oci_artifacts_container_configuration export_container_configuration {
  compartment_id                      = var.compartment_ocid
  is_repository_created_on_first_push = "false"
}

resource oci_artifacts_container_repository export_project_1 {
  compartment_id = oci_artifacts_container_configuration.export_container_configuration.compartment_id
  
  display_name = "${var.project_name}-${var.image_name_testimonials}"
  freeform_tags = {
  }
  is_immutable = "false"
  is_public    = "false"
  provisioner "local-exec" {
    command = "docker login ${var.registry} -u '${var.docker_user}' -p '${var.docker_pwd}' && docker pull ${var.initial_image} && docker tag ${var.initial_image} ${var.registry}/${data.oci_objectstorage_namespace.tenancy_namespace.namespace}/${var.image_name_testimonials}:1 && docker push ${var.registry}/${data.oci_objectstorage_namespace.tenancy_namespace.namespace}/${var.image_name_testimonials}:1"
  }
}

resource oci_artifacts_container_repository export_project_2 {
  compartment_id = oci_artifacts_container_configuration.export_container_configuration.compartment_id
  
  display_name = "${var.project_name}-${var.image_name_authorizer}"
  freeform_tags = {
  }
  is_immutable = "false"
  is_public    = "false"
  provisioner "local-exec" {
    command = "docker login ${var.registry} -u '${var.docker_user}' -p '${var.docker_pwd}' && docker pull ${var.initial_image} && docker tag ${var.initial_image} ${var.registry}/${data.oci_objectstorage_namespace.tenancy_namespace.namespace}/${var.image_name_authorizer}:1 && docker push ${var.registry}/${data.oci_objectstorage_namespace.tenancy_namespace.namespace}/${var.image_name_authorizer}:1"
  }
  depends_on = [oci_artifacts_container_repository.export_project_1]
}
